spring.application.name=google-contacts-app
server.port=8080

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}


spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token

# Updated scopes to include full contacts access (read AND write)
spring.security.oauth2.client.registration.google.scope=openid,profile,email,https://www.googleapis.com/auth/contacts

# Make sure the provider configuration is complete
spring.security.oauth2.client.provider.google.user-name-attribute=name

# Logging
logging.level.org.springframework.security=DEBUG
logging.level.com.example.google_contacts_app=DEBUG